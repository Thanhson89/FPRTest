open Interval
open Opt_func


let start_interval = Array.init 3 (function
| 0 -> {low = -1.00000000000000000000e+00; high = 1.00000000000000000000e+00}
| 1 -> {low = -1.00000000000000000000e+00; high = 1.00000000000000000000e+00}
| 2 -> {low = -1.00000000000000000000e+00; high = 1.00000000000000000000e+00}
| _ -> failwith "Out of boundaries"
)

let f_X input_array = 
  let var_x0 = input_array.(0) in
  let var_x1 = input_array.(1) in
  let var_x2 = input_array.(2) in
(abs_I((((cos_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2))) *$ (var_x0 *$ {low = -3.13142090268672013131e-01; high = -3.13142090268671957620e-01})) +$ (cos_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2))) *$ (var_x1 *$ {low = -6.82697591147724835992e+00; high = -6.82697591147724747174e+00}))) +$ (cos_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2))) *$ (var_x2 *$ {low = -3.99244635537408021353e-01; high = -3.99244635537407965842e-01})))) +$ (abs_I((cos_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2))) *$ floor_power2_I((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ {low = -1.86647230546875007827e-08; high = 1.86647230546875007827e-08})))) +$ (abs_I((cos_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2))) *$ floor_power2_I((({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1) +$ {low = -4.06919474093750021453e-07; high = 4.06919474093750021453e-07})))) +$ (abs_I((cos_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2))) *$ floor_power2_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ {low = -1.02163064490234407002e-06; high = 1.02163064490234407002e-06})))) +$ (abs_I((cos_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2))) *$ floor_power2_I((({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2) +$ {low = -2.37968346796875012727e-08; high = 2.37968346796875012727e-08})))) +$ (abs_I((cos_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2))) *$ floor_power2_I((((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2)) +$ {low = -1.64147392733593797680e-06; high = 1.64147392733593797680e-06})))) +$ abs_I(floor_power2_I((sin_I(((({low = 3.84626076739179545427e+00; high = 3.84626076739179589836e+00} *$ var_x0) +$ ({low = -9.75840895336722802256e+00; high = -9.75840895336722624620e+00} *$ var_x1)) +$ ({low = -2.51887824530867554529e+00; high = -2.51887824530867510120e+00} *$ var_x2))) +$ {low = -2.59515161113939162135e-06; high = 2.59515161113939162135e-06})))))))))

let _ =
  let x_tol = size_max_X start_interval *. 0.000000e+00 +. 1.000000e-02 in
  let upper_bound, lower_bound, c = Opt0.opt f_X start_interval x_tol (1.000000e-02) (1.000000e-02) (1000000) in
  let () = Printf.printf "iter_max = %d\n" c in
  let () = Printf.printf "max = %0.20e\n" upper_bound in
  let () = Printf.printf "lower_max = %0.20e\n" lower_bound in
  let () = Printf.printf "iter_min = 0\n" in
  let () = Printf.printf "min = 0\n" in
  let () = Printf.printf "lower_min = 0\n" in
  flush stdout
